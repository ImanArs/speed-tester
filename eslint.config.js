module.exports = {
  env: {
     browser: true,
     es2021: true,
     jest: true,
  },
  extends: [
     'plugin:react/recommended', 'airbnb', 'plugin:@typescript-eslint/recommended', 'plugin:@typescript-eslint/eslint-recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parser: '@typescript-eslint/parser',
  parserOptions: {
     project: './tsconfig.json',
     requireConfigFile: false,
     ecmaFeatures: {
        jsx: true,
        tsx: true,
     },
     ecmaVersion: 'latest',
     sourceType: 'module',
  },
  plugins: [
     'react',
     '@typescript-eslint',
     'import',
  ],
  rules: {
     '@typescript-eslint/no-unused-vars': ["warn", { "args": "all" }],
     '@typescript-eslint/explicit-function-return-type': 'off',
     // '@typescript-eslint/semi': ['warn', 'never'],
     'no-undef': [0],
     'no-restricted-globals': 'off',
     'react/jsx-indent': [2, 2],
     'react/jsx-indent-props': [2, 2],
     'jsx-a11y/label-has-associated-control': 'off',
     'no-use-before-define': 'off',
     'no-plusplus': 'off',
     'prefer-regex-literals': 'off',
     'no-useless-return': 'off',
     'react/no-array-index-key': 'off',
     'consistent-return': 'off',
     indent: ['error', 2],
     'react/jsx-filename-extension': [2, { extensions: ['.js', '.jsx', 'js', '.tsx'] }],
     'import/no-unresolved': 'off',
     'import/prefer-default-export': 'off',
     semi: ['error', 'never'],
     'jsx-quotes': ['error', 'prefer-double'],
     quotes: ['error', 'single'],
     'no-unused-vars': 1,
     'react/button-has-type': 'off',
     'no-tabs': 'off',
     'func-names': 'off',
     'no-console': 'off',
     camelcase: 'off',
     'no-nested-ternary': 'off',
     'react/require-default-props': 'off',
     'react/react-in-jsx-scope': 'off',
     'react/jsx-props-no-spreading': 'off',
     'react/function-component-definition': 'off',
     'no-shadow': 'off',
     'import/extensions': 'off',
     'import/no-extraneous-dependencies': 'off',
     'react/no-unescaped-entities': 'off',
     'no-underscore-dangle': 'off',
     'max-len': ['error', { ignoreComments: true, code: 150 }],
     'jsx-ally/no-static-element-interactions': 'off',
     'jsx-a11y/click-events-have-key-events': 'off',
     'no-param-reassign': 'off',
     'arrow-body-style': 'off',
     'react/self-closing-comp': 'off',
     'jsx-a11y/no-static-element-interactions': 'off',
     '@typescript-eslint/no-namespace': 'off',
     'no-unused-expressions': 'off',
     'react/no-unstable-nested-components': 'off',
     'react/jsx-one-expression-per-line': 'off',
     'react/destructuring-assignment': 'off',
     'jsx-a11y/control-has-associated-label': 'off',
     'import/order': ['error', {
        'groups': ['builtin', 'external', 'internal', ['sibling', 'parent'], 'index', 'object', 'type'],
        'pathGroups': [
           {
              'pattern': 'react',
              'group': 'external',
              'position': 'before',
           },
           {
              'pattern': 'app/**',
              'group': 'internal',
              'position': 'after',
           },
           {
              'pattern': 'pages/**',
              'group': 'internal',
              'position': 'after',
           },
           {
              'pattern': 'widgets/**',
              'group': 'internal',
              'position': 'after',
           },
           {
              'pattern': 'features/**',
              'group': 'internal',
              'position': 'after',
           },
           {
              'pattern': 'entities/**',
              'group': 'internal',
              'position': 'after',
           },
           {
              'pattern': 'shared/**',
              'group': 'internal',
              'position': 'after',
           },
        ],
        'pathGroupsExcludedImportTypes': ['react', 'builtin'],
        'newlines-between': 'always-and-inside-groups',
        'alphabetize': {
           'order': 'asc',
           'caseInsensitive': true,
        },
    }]
  },
  globals: {
     __IS_DEV__: true,
  },
  overrides: [
     {
        files: ['**/src/**/*.{test,stories}.{ts,tsx}'],
        rules: {
           'react/react-in-jsx-scope': 'off',
           'linebreak-style': ['error', process.platform === 'win32' ? 'windows' : 'unix'],
        },
     },
  ],
}
